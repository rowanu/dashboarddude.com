<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: review | Dashboard Dude]]></title>
  <link href="http://dashboarddude.com/blog/categories/review/atom.xml" rel="self"/>
  <link href="http://dashboarddude.com/"/>
  <updated>2014-01-07T12:56:35-03:00</updated>
  <id>http://dashboarddude.com/</id>
  <author>
    <name><![CDATA[Rowan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Book Review: Data Visualization with D3.js Cookbook]]></title>
    <link href="http://dashboarddude.com/blog/2014/01/08/book-review-data-visualization-with-d3-dot-js-cookbook/"/>
    <updated>2014-01-08T12:00:00-03:00</updated>
    <id>http://dashboarddude.com/blog/2014/01/08/book-review-data-visualization-with-d3-dot-js-cookbook</id>
    <content type="html"><![CDATA[<p><img class="right" src="/images/posts/d3-cookbook/cover.jpg" width="250" height="250" title="Data Visualization with D3.js Cookbook" ></p>

<p>This is the D3.js book I wish I had when I started learning it. Even though it says "Cookbook", it's a great reference for people who are just starting to learn D3.js.</p>

<p>The author (Nick Qi Zhu) is the maker of <a href="http://nickqizhu.github.io/dc.js/">DC.js</a>, which is a cool <a href="http://square.github.io/crossfilter/">CrossFilter</a>-based extension which can be used for making really nice interactive reports and dashboards. It's nice to have an author with a proven record, and this was the main reason I decided to read the book.</p>

<!--more-->


<p>Part of D3's power and utility comes from the way it handles the binding of data to the DOM, which is quite  different from previous ways of approaching the problem.
By literally being "Data Driven Documents" (which is what "D3" stands for), it makes the creating <em>and updating</em> of visualisations a breeze. This book goes a long way to flattening-out the steep learning curve that D3 has.</p>

<p>Once you've made this mental leap to D3's way of thinking, the library becomes much much easier to use. Nick's approach of giving short, simple examples and then breaking them down line-by-line really works well for cementing the ideas with concrete practice.</p>

<p>The structure of the chapters is really well done, and eases you in to D3 by starting out with simpler examples, and building on them as the chapters go along. It starts by drawing simple graphs, then introducing scales (for graphing more interesting data), and then axes on top of that (and so on):</p>

<ul>
<li>Chapter 1: Getting Started</li>
<li>Chapter 2: Be Selective</li>
<li>Chapter 3: Dealing with Data</li>
<li>Chapter 4: Tipping the Scales</li>
<li>Chapter 5: Play with Axes</li>
<li>Chapter 6: Transition with Style</li>
<li>Chapter 7: Getting into Shape</li>
<li>Chapter 8: Chart them up</li>
<li>Chapter 9: Lay them out</li>
<li>Chapter 10: Well Behaved Visualization</li>
<li>Chapter 11: Feel the Force</li>
<li>Chapter 12: Know your map</li>
<li>Chapter 13: Test drive your visualization</li>
</ul>


<p>The layout of the example code given in the book (which you can get <a href="https://github.com/NickQiZhu/d3-cookbook">from GitHub</a>) is probably the best of any technical book I've had. Once you've started a local web server, you can quickly check out all the examples chapter-by-chapter. If you want a more detailed insight to what the book covers, go and get the code yourself and have a look.</p>

<p>The only thing I would've liked to see different is a quicker switch to creating SVG-based graphs (rather than just relying on HTML/CSS). As it stands, it's probably an easier switch for people coming from HTML/CSS backgrounds (which I imagine is most readers).</p>

<p>I read the O'Reilly (.mobi) version of this book on a Kindle, and the formatting was good. Reading code is always a bit of a hassle on Kindle, but by repeating the important snippets when they're being explained, it is very understandable.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dashboard: Giraffe]]></title>
    <link href="http://dashboarddude.com/blog/2013/12/16/dashboard-giraffe/"/>
    <updated>2013-12-16T16:00:00-03:00</updated>
    <id>http://dashboarddude.com/blog/2013/12/16/dashboard-giraffe</id>
    <content type="html"><![CDATA[<p>Giraffe is great example of what's possible with a JavaScript-only dashboard on top of Graphite data. Like many other Graphite dashboards, it's built on top of <a href="">D3.js</a>. It differs slightly because it's made with the <a href="http://code.shutterstock.com/rickshaw/">Rickshaw graphing library</a> instead of using D3.js directly, which gives it some nice polish.</p>

<p><img src="/images/posts/dashboard-giraffe/demo.png" title="Giraffe Dashboard" alt="graph" /></p>

<!--more-->


<h3>Features</h3>

<ul>
<li>Stackable metrics.</li>
<li>One-click changing between (pre-set) time periods.</li>
<li>Customizable summary methods and display information.</li>
<li>Configuration is done with JavaScript objects.</li>
</ul>


<h3>Good For</h3>

<ul>
<li><strong>Browsing time periods</strong> is really easy. With one click you can see you metrics with fidelity from 10 minutes to 7 weeks (and a bunch of sensible values in-between).</li>
<li><strong>No server is required</strong>, so getting up and running is as simple as editing <code>dashboard.js</code> and opening the directory in your browser locally.</li>
<li><strong>Detailed example dashboards</strong> are provided, so you can follow along.</li>
<li><strong>Stacking similar metrics</strong> is a simple as using a wildcard or specifying multiple targets, and they'll all show up on one graph.</li>
<li><strong>Its summary details/legend</strong> can be shown/hidden as part of the display. It includes things like the range of values over the viewed time period, which is a nice time-saver for relevant metrics.</li>
</ul>


<h3>Not so Good For</h3>

<ul>
<li><strong>Viewing lots of metrics</strong> starts to eat a lot of RAM (regardless of how they're laid out). This issue is probably caused by Rickshaw (rather than Giraffe), but knowing that doesn't solve the problem.</li>
<li><strong>The layout doesn't use the all space available</strong>, which makes it less attractive as a monitoring dashboard. The config defaults to a 3-graphs-per-row layout, and while you can make graphs span multiple columns (even more than the default 3), I couldn't get the graphs to scale-out to my wide display.</li>
<li><strong>Fine metrics being compared to each other</strong> can be difficult to see because multiple metrics on one graph are stacked. Being stacked means that the ordering of the metrics is important, and it's not easy to change on the fly (you have to edit the dashboard configuration object). Note that you can toggle the visibility of metrics in the interface, but this still requires some manual intervention.</li>
<li><strong>Configuration is a bit complicated</strong>, but only because  there are a lot of options/aliases/etc. It's much easier to set up when you already have a clear idea of the metrics you want to display.</li>
</ul>


<h2>Summary</h2>

<p>I would use this dashboard to quickly access and browse (historically) metrics that I know are important, but might not be my 'top' monitoring metrics.</p>

<p>I don't think I would use this as my main monitoring dashboard (ie. on a big-screen for everyone to see all the time) because of the manual intervention and fine-grained detail, but those extra details make it a good for specific metrics/tasks.</p>

<h3>Links</h3>

<ul>
<li>Check out a <a href="http://giraffe.kenhub.com/">sample dashboard</a>.</li>
<li>The project <a href="https://github.com/kenhub/giraffe">GitHub page</a>.</li>
</ul>


<h2>More to Come</h2>

<p>If you're interested in finding out more about JavaScript dashboards for
Graphite, don't forget to sign up to the mailing list!</p>

<!-- Begin MailChimp Signup Form -->


<div id="mc_embed_signup" style="text-align: center;">
<form action="http://learnfastmath.us2.list-manage.com/subscribe/post?u=73d02cd94a0c4a3fa258d4d12&amp;id=9d0805d199" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
  <label for="mce-EMAIL">Get Updates From The Dude</label>
  <input type="email" value="" name="EMAIL" class="email" id="mce-EMAIL" placeholder="email address" required>
  <div class="clear"><input type="submit" value="Subscribe" name="subscribe"
    id="mc-embedded-subscribe" class="button"></div>
</form>
</div>


<!--End mc_embed_signup-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dashboard: Tasseo]]></title>
    <link href="http://dashboarddude.com/blog/2013/11/09/dashboard-tasseo/"/>
    <updated>2013-11-09T18:00:00-03:00</updated>
    <id>http://dashboarddude.com/blog/2013/11/09/dashboard-tasseo</id>
    <content type="html"><![CDATA[<p>So I lied. The first of my series of <a href="/blog/2013/09/09/dashboard-reviews/">dashboard reviews</a> is NOT on Dusk, but one of
Obfuscurity's other great dashboards: <a href="https://github.com/obfuscurity/tasseo">Tasseo</a>.</p>

<h2>Tasseo</h2>

<p><a href="https://github.com/obfuscurity/tasseo">Tasseo</a> is a small, lightweight dashboard that's good for throwing together a
useful monitoring dashboard in a minimal amount of time. It's built with
<a href="http://code.shutterstock.com/rickshaw/">Rickshaw</a> graphs (themselves based on
the fantastic JavaScript library <a href="http://d3js.org/">D3.js</a>) on top of a small
<a href="http://www.sinatrarb.com/">Sinatra</a> application.</p>

<p><img src="https://github.com/obfuscurity/tasseo/raw/master/lib/tasseo/public/i/tasseo.png" title="Tasseo Dashboard" alt="graph" /></p>

<!--more-->


<h3>Features</h3>

<ul>
<li>Configuration for dashboards is done with simple JavaScript Objects.</li>
<li>You can set value thresholds for changing the colour of a graph from green
(default), yellow (warning), and red (critical).</li>
</ul>


<h3>Good For</h3>

<ul>
<li><strong>Getting up and running quickly.</strong> There's just enough configuration options,
but not too many. This can get you from the default Graphite dashboards (which
can be a bit hard on the eye) to a nice looking monitoring dashboard in minutes,
not hours.</li>
<li><strong>Showing specific, discrete metrics</strong> for a high-level operations dashboard.</li>
<li>Metrics you want to set visual thresholds for.</li>
</ul>


<h3>Not so Good For</h3>

<ul>
<li><strong>Displaying large numbers of metrics.</strong> The layout eats in to your total
space (if you want to display lots of similar metrics, look at horizon charts
like Dusk instead).</li>
<li><strong>Discovering new important metrics.</strong> Mainly because it doesn't show a large
number of metrics, you're unlikely to find out new key metrics while using
Tasseo.</li>
<li><strong>Viewing metrics in detail over time.</strong> There's no rulers showing you what
the values in the chart represent, so it can be hard to know what the exact
values were in the past. The current value is displayed numerically, so it's not
an issue if you're only interested in historical trends - not values.</li>
<li><strong>Zooming/investigating metrics on the dashboard.</strong> What you see is what you
get, but it's enough for a high-level monitoring dashboard.</li>
</ul>


<h3>Links</h3>

<p>Check it out on <a href="https://github.com/obfuscurity/tasseo">GitHub</a>.</p>

<h2>More to Come</h2>

<p>If you're interested in finding out more about JavaScript dashboards for
Graphite, don't forget to sign up to the mailing list!</p>

<!-- Begin MailChimp Signup Form -->


<div id="mc_embed_signup" style="text-align: center;">
<form action="http://learnfastmath.us2.list-manage.com/subscribe/post?u=73d02cd94a0c4a3fa258d4d12&amp;id=9d0805d199" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
  <label for="mce-EMAIL">Get Updates From The Dude</label>
  <input type="email" value="" name="EMAIL" class="email" id="mce-EMAIL" placeholder="email address" required>
  <div class="clear"><input type="submit" value="Subscribe" name="subscribe"
    id="mc-embedded-subscribe" class="button"></div>
</form>
</div>


<!--End mc_embed_signup-->

]]></content>
  </entry>
  
</feed>
